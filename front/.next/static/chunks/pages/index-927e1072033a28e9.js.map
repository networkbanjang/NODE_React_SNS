{"version":3,"file":"static/chunks/pages/index-927e1072033a28e9.js","mappings":"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","sources":["webpack://_N_E/./components/PostForm.js","webpack://_N_E/./pages/index.js","webpack://_N_E/"],"sourcesContent":["import { Form, Input, Button } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useCallback, useRef, useState } from 'react';\r\nimport { addPostRequest, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from \"../reducers/post\";\r\nimport backurl from \"../config/config\";\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n  //이미지\r\n  const imageInput = useRef();              //파일버튼 숨기기용\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();              //imageInput을 클릭한걸로 만든다\r\n  }, [imageInput.current])\r\n\r\n\r\n  ///텍스트\r\n  const [text, setText] = useState('');\r\n  const onChangeText = useCallback((event) => {\r\n    setText(event.target.value);\r\n  }, [])\r\n\r\n\r\n  //전송후 초기화\r\n  const onsubmit = useCallback(() => {\r\n    if (!text) {\r\n      return alert('내용이 없습니다.');\r\n    }\r\n\r\n    const formData = new FormData();\r\n    imagePaths.forEach(v => {\r\n      formData.append('image', v);\r\n    });\r\n    formData.append('content', text);\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: formData,\r\n    });\r\n    setText('')\r\n  }, [text, imagePaths])\r\n\r\n  const onChangeImages = useCallback((event) => {\r\n    const imageFormData = new FormData(); //Form데이터로 보내야 백단에서 데이터 처리가 가능함\r\n    [].forEach.call(event.target.files, (file) => {      //유사배열을 배열로 바꾸기\r\n      imageFormData.append('image', file);   //키,값 upload.array와 같아야함 \r\n    });\r\n    dispatch({\r\n      type: UPLOAD_IMAGES_REQUEST,\r\n      data: imageFormData,\r\n    })\r\n  });\r\n  const onremoveImage = useCallback((index) => () => {//고차함수\r\n    dispatch({\r\n      type: REMOVE_IMAGE,\r\n      data: index,\r\n    })\r\n  })\r\n\r\n  return (\r\n    <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onsubmit} >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"내용을 입력해주세요\"\r\n      />\r\n      <div>\r\n        <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n        <Button onClick={onClickImageUpload}>업로드</Button>\r\n        <Button type=\"primary\" style={{ float: 'right' }} htmlType=\"submit\">전송</Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v, i) => (\r\n          <div key={v} style={{ display: 'inline-block' }}>\r\n            <img src={`${backurl()}/${v}`} style={{ width: '200px' }} alt={v} />\r\n            <div>\r\n              <Button onClick={onremoveImage(i)}>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PostForm;","import AppLayout from \"../components/AppLayout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { useEffect } from \"react\";\r\nimport { LOAD_MY_INFO_REQUEST } from '../reducers/user';\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nimport wrapper from \"../store/configureStore\";\r\nimport { END } from 'redux-saga';\r\nimport axios from 'axios';\r\nimport backurl from \"../config/config\";\r\n\r\nconst Home = () => {\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 500) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts, hasMorePosts, loadPostsLoading]);\r\n\r\n  return (\r\n    <AppLayout>\r\n\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => {\r\n        return (<PostCard key={post.id} post={post} />)\r\n      })}\r\n    </AppLayout>\r\n  )\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';   //헤더 정보가 context.req안에 들어있음\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  \r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_POSTS_REQUEST,\r\n  });\r\n  context.store.dispatch(END);\r\n  console.log('엔드!');\r\n  await context.store.sagaTask.toPromise();\r\n})  //이부분이 홈 보다 먼저 실행됨 , 여기서실행된 결과를 HYDRATE로 보냄\r\n\r\nexport default Home;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  "],"names":["imagePaths","useSelector","state","post","dispatch","useDispatch","imageInput","useRef","onClickImageUpload","useCallback","current","click","useState","text","setText","onChangeText","event","target","value","onsubmit","alert","formData","FormData","forEach","v","append","type","ADD_POST_REQUEST","data","onChangeImages","imageFormData","call","files","file","UPLOAD_IMAGES_REQUEST","onremoveImage","index","REMOVE_IMAGE","style","margin","encType","onFinish","onChange","maxLength","placeholder","name","multiple","hidden","ref","onClick","float","htmlType","map","i","display","src","backurl","width","alt","me","user","mainPosts","hasMorePosts","loadPostsLoading","useEffect","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","LOAD_POSTS_REQUEST","addEventListener","removeEventListener","AppLayout","PostCard","__NEXT_P","push"],"sourceRoot":""}