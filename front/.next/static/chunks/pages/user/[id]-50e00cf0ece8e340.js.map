{"version":3,"file":"static/chunks/pages/user/[id]-50e00cf0ece8e340.js","mappings":"8QA6GA,UA/Fa,WACX,IAAMA,GAAWC,EAAAA,EAAAA,MAETC,GADOC,EAAAA,EAAAA,aACOC,MAAdF,GACR,GAAsDG,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,QAA3EC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,iBACzBC,GAAaN,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMM,QAA1CD,SAoBR,OAlBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,WACXC,OAAOC,YAAcC,SAASC,gBAAgBC,aAAeF,SAASC,gBAAgBE,aAAe,KACnGX,IAAiBC,GACnBV,EAAS,CACPqB,KAAMC,EAAAA,GACNC,OAAQf,EAAUA,EAAUgB,OAAS,IAAMhB,EAAUA,EAAUgB,OAAS,GAAGtB,GAC3EuB,KAAMvB,KAMd,OADAa,OAAOW,iBAAiB,SAAUZ,GAC3B,WACLC,OAAOY,oBAAoB,SAAUb,MAEtC,CAACN,EAAUgB,OAAQf,EAAcP,KAGlC,UAAC,IAAD,WACGS,IACC,UAAC,IAAD,YACE,6BACGA,EAASiB,SADZ,0BAIA,iBAAMC,KAAK,cAAcC,QAAO,UAAKnB,EAASiB,SAAd,sCAChC,iBAAMG,SAAS,WAAWD,QAAO,UAAKnB,EAASiB,SAAd,sCACjC,iBAAMG,SAAS,iBAAiBD,QAAO,UAAKnB,EAASiB,SAAd,sCACvC,iBAAMG,SAAS,WAAWD,QAAQ,sCAClC,iBAAMC,SAAS,SAASD,QAAO,oCAA+B5B,QAGjES,GAEG,SAAC,IAAD,CACEqB,QAAS,EACP,wDAEE,kBACCrB,EAASsB,QAHH,SAKT,iDAEE,kBACCtB,EAASuB,aAHH,cAKT,iDAEE,kBACCvB,EAASwB,YAHH,aAZb,UAmBE,SAAC,SAAD,CACEC,QAAQ,SAAC,IAAD,UAASzB,EAASiB,SAAS,KACnCS,MAAO1B,EAASiB,aAIpB,KACHpB,EAAU8B,KAAI,SAAC/B,GAAD,OAAU,SAAC,IAAD,CAAwBA,KAAMA,GAAfA,EAAKL,Y,qBCjF9Ca,OAAOwB,SAAWxB,OAAOwB,UAAY,IAAIC,KAAK,CAC7C,aACA,WACE,OAAO,EAAQ,W","sources":["webpack://_N_E/./pages/user/[id].js","webpack://_N_E/?5a93"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Avatar, Card } from 'antd';\r\nimport { END } from 'redux-saga';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../../reducers/post';\r\nimport { LOAD_MY_INFO_REQUEST, LOAD_OTHER_REQUEST, LOAD_USER_REQUEST } from '../../reducers/user';\r\nimport PostCard from '../../components/PostCard';\r\nimport wrapper from '../../store/configureStore';\r\nimport AppLayout from '../../components/AppLayout';\r\n\r\nconst User = () => {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\r\n  const { userInfo } = useSelector((state) => state.user);\r\n\r\n  useEffect(() => {\r\n    const onScroll = () => {\r\n      if (window.pageYOffset + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          dispatch({\r\n            type: LOAD_USER_POSTS_REQUEST,\r\n            lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\r\n            data: id,\r\n          });\r\n        }\r\n      }\r\n    };\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    };\r\n  }, [mainPosts.length, hasMorePosts, id]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {userInfo && (\r\n        <Head>\r\n          <title>\r\n            {userInfo.nickname}\r\n            님의 글\r\n          </title>\r\n          <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\r\n          <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\r\n          <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\r\n          <meta property=\"og:image\" content=\"https://nodebird.com/favicon.ico\" />\r\n          <meta property=\"og:url\" content={`https://nodebird.com/user/${id}`} />\r\n        </Head>\r\n      )}\r\n      {userInfo\r\n        ? (\r\n          <Card\r\n            actions={[\r\n              <div key=\"twit\">\r\n                작성글 수\r\n                <br />\r\n                {userInfo.Posts}\r\n              </div>,\r\n              <div key=\"following\">\r\n                팔로잉\r\n                <br />\r\n                {userInfo.Followings}\r\n              </div>,\r\n              <div key=\"follower\">\r\n                팔로워\r\n                <br />\r\n                {userInfo.Followers}\r\n              </div>,\r\n            ]}\r\n          >\r\n            <Card.Meta\r\n              avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n              title={userInfo.nickname}\r\n            />\r\n          </Card>\r\n        )\r\n        : null}\r\n      {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_USER_POSTS_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n  context.store.dispatch({\r\n    type: LOAD_OTHER_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n  await context.store.sagaTask.toPromise();\r\n  return { props: {} };\r\n});\r\n\r\nexport default User;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/user/[id]\",\n      function () {\n        return require(\"private-next-pages/user/[id].js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/user/[id]\"])\n      });\n    }\n  "],"names":["dispatch","useDispatch","id","useRouter","query","useSelector","state","post","mainPosts","hasMorePosts","loadPostsLoading","userInfo","user","useEffect","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","type","LOAD_USER_POSTS_REQUEST","lastId","length","data","addEventListener","removeEventListener","nickname","name","content","property","actions","Posts","Followings","Followers","avatar","title","map","__NEXT_P","push"],"sourceRoot":""}