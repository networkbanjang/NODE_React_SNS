{"version":3,"file":"static/chunks/pages/post/[id]-45f9fbe6822d205e.js","mappings":"+OAkEA,UAtDa,WAEX,IACQA,GADOC,EAAAA,EAAAA,aACOC,MAAdF,GACR,GAAsCG,EAAAA,EAAAA,KAAa,SAAAC,GAAK,OAAIA,EAAMC,QAA1DC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAQpB,OANAC,EAAAA,EAAAA,YAAU,WACJD,IACFE,MAAM,uGACNC,IAAAA,KAAY,QAEb,CAACH,IACAA,EACK,MAIP,UAAC,IAAD,YACE,UAAC,IAAD,YACE,6BACGD,EAAWK,KAAKC,SADnB,0BAIA,iBAAMC,KAAK,cAAcC,QAASR,EAAWQ,WAC7C,iBAAMC,SAAS,WAAWD,QAAO,UAAKR,EAAWK,KAAKC,SAArB,sCACjC,iBAAMG,SAAS,iBAAiBD,QAASR,EAAWQ,WAEpD,iBAAMC,SAAS,SAASD,QAAO,qCAAgCd,SAEjE,SAAC,IAAD,CAAUK,KAAMC,S,sBCxCjBU,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,aACA,WACE,OAAO,EAAQ,W","sources":["webpack://_N_E/./pages/post/[id].js","webpack://_N_E/?67ea"],"sourcesContent":["import axios from \"axios\";\r\nimport Head from \"next/head\";\r\nimport Router, { useRouter } from \"next/router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { END } from \"redux-saga\";\r\nimport AppLayout from \"../../components/AppLayout\";\r\nimport PostCard from \"../../components/PostCard\";\r\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\r\nimport wrapper from \"../../store/configureStore\";\r\nimport {useEffect} from 'react'\r\n\r\nconst Post = () => {//[] 안이 스스로 바뀜\r\n\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n  const { singlePost, loadPostError } = useSelector((state => state.post));\r\n\r\n  useEffect(() => {\r\n    if (loadPostError) {\r\n      alert('해당게시글이 없거나 삭제되었습니다.');\r\n      Router.push('/');\r\n    }\r\n  }, [loadPostError]);\r\n  if (loadPostError) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>\r\n          {singlePost.User.nickname}\r\n          님의 글\r\n        </title>\r\n        <meta name=\"description\" content={singlePost.content} />\r\n        <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n        <meta property=\"og:description\" content={singlePost.content} />\r\n        {/* <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'http://localhost:3065/favicon.ico'} /> */}\r\n        <meta property=\"og:url\" content={`http://localhost:3065/post/${id}`} />\r\n      </Head>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  )\r\n}\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async (context) => {\r\n  const cookie = context.req ? context.req.headers.cookie : '';   //헤더 정보가 context.req안에 들어있음\r\n  axios.defaults.headers.Cookie = '';\r\n  if (context.req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  context.store.dispatch({\r\n    type: LOAD_MY_INFO_REQUEST,\r\n  });\r\n\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data: context.params.id,\r\n  });\r\n  context.store.dispatch(END);\r\n\r\n  await context.store.sagaTask.toPromise();\r\n\r\n  return { props: {} };\r\n})\r\nexport default Post;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/post/[id]\",\n      function () {\n        return require(\"private-next-pages/post/[id].js\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/post/[id]\"])\n      });\n    }\n  "],"names":["id","useRouter","query","useSelector","state","post","singlePost","loadPostError","useEffect","alert","Router","User","nickname","name","content","property","window","__NEXT_P","push"],"sourceRoot":""}